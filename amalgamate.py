#!/usr/bin/env python3

# amalgamate: concatenate all the source code in this repo into one big .sv file
# that users can include on the command line.
#
# the resulting file should look like:
#
#   - contents of "lib/bluespec.svh"
#   - contents of "lib/__BSC_$X.sv" for each X in the list of files in "lib"
#   - for each file, only include the contents from the markers:
#       // -- AMALGAMATE: start --
#       // -- AMALGAMATE: end --

import os, sys

def read_file_contents(filename):
    """read file contents between marker lines"""
    contents = []
    with open(filename, 'r') as f:
        BEGIN_MARKER = [
            f'// ---------------------------------------------------------------------------------------------------------------------\n',
            f'// -- BEGIN FILE: {filename}\n',
        ]
        for line in f:
            l = line.strip()
            if l == '// -- AMALGAMATE: start --':
                contents = BEGIN_MARKER
            elif l == '// -- AMALGAMATE: end --':
                break
            else:
                contents.append(line)

    contents.append('// -- END FILE: {}\n'.format(filename))
    contents.append('// ---------------------------------------------------------------------------------------------------------------------')
    contents.append('\n\n')
    return ''.join(contents)

if __name__ == '__main__':
    outfile = sys.argv[1] if len(sys.argv) > 1 else '/dev/stdout'
    bsc_files = [ 'lib/' + f for f in os.listdir('lib') if f.startswith('__BSC_') ]

    # read in the contents of the files
    sv, svh = '', read_file_contents('lib/bluespec.svh')
    for filename in bsc_files:
        sv += read_file_contents(filename)

    with open(outfile, 'w') as f:
        f.write("// SPDX-FileCopyrightText: Â© 2020-2024 The Bluespec Authors\n")
        f.write("// SPDX-License-Identifier: BSD-3-Clause\n")
        f.write("// @generated by amalgamate.py\n")
        f.write("""
// ---------------------------------------------------------------------------------------------------------------------

// This file contains an "amalgamated" version of the Bluespec Compiler
// primitives: a single-file SystemVerilog file containing all the necessary
// RTL modules.
//
// If you are using bsc-compiled code in your build, you should include this
// file in your synthesis or simulation routines and you will automatically have
// all the necessary code available.
//
// This module also includes many empty-interface (simulation) testbench modules
// that can be run under a simulation tool, and are tested with Verilator, and
// included for use in whatever SystemVerilog-compatible simulator you use.

// Past this point, all the following code has been auto-generated and
// should not be modified by hand if possible. YOU HAVE BEEN WARNED.

// ---------------------------------------------------------------------------------------------------------------------

// verilator lint_off DECLFILENAME

""")
        f.write(svh)
        f.write(sv)
